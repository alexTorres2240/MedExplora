import { type HTMLAttributes, type ReservedProps } from 'vue';
import type { PayPalMessagesComponentOptions } from '@paypal/paypal-js';
import type { ElementScriptTrigger } from '#nuxt-scripts/types';
import type { PayPalInput } from '../registry/paypal.js';
type __VLS_Props = {
    /**
     * Customize the root element attributes.
     */
    rootAttrs?: HTMLAttributes & ReservedProps & Record<string, unknown>;
    /**
     * Defines the trigger event to load the script.
     */
    trigger?: ElementScriptTrigger;
    /**
     * The client id for the paypal script.
     */
    clientId?: string;
    /**
     * The options for the paypal buttons.
     */
    messagesOptions?: PayPalMessagesComponentOptions;
    /**
     * The merchant id for the paypal script.
     */
    merchantId?: string;
    /**
     * The partner attribution id for the paypal script.
     */
    partnerAttributionId?: string;
    /**
     * The options for the paypal scipt.
     */
    paypalScriptOptions?: Partial<PayPalInput>;
};
declare var __VLS_1: {}, __VLS_3: {}, __VLS_10: {}, __VLS_12: {}, __VLS_14: {};
type __VLS_Slots = {} & {
    placeholder?: (props: typeof __VLS_1) => any;
} & {
    loading?: (props: typeof __VLS_3) => any;
} & {
    awaitingLoad?: (props: typeof __VLS_10) => any;
} & {
    error?: (props: typeof __VLS_12) => any;
} & {
    default?: (props: typeof __VLS_14) => any;
};
declare const __VLS_component: import("vue").DefineComponent<__VLS_Props, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    render: (data: Record<string, unknown>) => any;
    apply: (data: Record<string, unknown>) => any;
    clickMessages: (data: Record<string, unknown>) => any;
}, string, import("vue").PublicProps, Readonly<__VLS_Props> & Readonly<{
    onRender?: ((data: Record<string, unknown>) => any) | undefined;
    onApply?: ((data: Record<string, unknown>) => any) | undefined;
    onClickMessages?: ((data: Record<string, unknown>) => any) | undefined;
}>, {
    trigger: ElementScriptTrigger;
    clientId: string;
    paypalScriptOptions: Partial<PayPalInput>;
    messagesOptions: PayPalMessagesComponentOptions;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithSlots<typeof __VLS_component, __VLS_Slots>;
export default _default;
type __VLS_WithSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
