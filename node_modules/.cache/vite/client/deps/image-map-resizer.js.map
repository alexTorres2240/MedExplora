{
  "version": 3,
  "sources": ["../../../../image-map-resizer/js/imageMapResizer.js"],
  "sourcesContent": ["/*! Image Map Resizer\n *  Desc: Resize HTML imageMap to scaled image.\n *  Copyright: (c) 2014-15 David J. Bradshaw - dave@bradshaw.net\n *  License: MIT\n */\n\n;(function() {\n  'use strict'\n\n  function scaleImageMap() {\n    function resizeMap() {\n      function resizeAreaTag(cachedAreaCoords, idx) {\n        function scale(coord) {\n          var dimension = 1 === (isWidth = 1 - isWidth) ? 'width' : 'height'\n          return (\n            padding[dimension] +\n            Math.floor(Number(coord) * scalingFactor[dimension])\n          )\n        }\n\n        var isWidth = 0\n        areas[idx].coords = cachedAreaCoords\n          .split(',')\n          .map(scale)\n          .join(',')\n      }\n\n      var scalingFactor = {\n        width: image.width / image.naturalWidth,\n        height: image.height / image.naturalHeight,\n      }\n\n      var padding = {\n        width: parseInt(\n          window.getComputedStyle(image, null).getPropertyValue('padding-left'),\n          10\n        ),\n        height: parseInt(\n          window.getComputedStyle(image, null).getPropertyValue('padding-top'),\n          10\n        ),\n      }\n\n      cachedAreaCoordsArray.forEach(resizeAreaTag)\n    }\n\n    function getCoords(e) {\n      //Normalize coord-string to csv format without any space chars\n      return e.coords.replace(/ *, */g, ',').replace(/ +/g, ',')\n    }\n\n    function debounce() {\n      clearTimeout(timer)\n      timer = setTimeout(resizeMap, 250)\n    }\n\n    function start() {\n      if (\n        image.width !== image.naturalWidth ||\n        image.height !== image.naturalHeight\n      ) {\n        resizeMap()\n      }\n    }\n\n    function addEventListeners() {\n      image.addEventListener('load', resizeMap, false) //Detect late image loads in IE11\n      window.addEventListener('focus', resizeMap, false) //Cope with window being resized whilst on another tab\n      window.addEventListener('resize', debounce, false)\n      window.addEventListener('readystatechange', resizeMap, false)\n      document.addEventListener('fullscreenchange', resizeMap, false)\n    }\n\n    function beenHere() {\n      return 'function' === typeof map._resize\n    }\n\n    function getImg(name) {\n      return document.querySelector('img[usemap=\"' + name + '\"]')\n    }\n\n    function setup() {\n      areas = map.getElementsByTagName('area')\n      cachedAreaCoordsArray = Array.prototype.map.call(areas, getCoords)\n      image = getImg('#' + map.name) || getImg(map.name)\n      map._resize = resizeMap //Bind resize method to HTML map element\n    }\n\n    var /*jshint validthis:true */\n      map = this,\n      areas = null,\n      cachedAreaCoordsArray = null,\n      image = null,\n      timer = null\n\n    if (!beenHere()) {\n      setup()\n      addEventListeners()\n      start()\n    } else {\n      map._resize() //Already setup, so just resize map\n    }\n  }\n\n  function factory() {\n    function chkMap(element) {\n      if (!element.tagName) {\n        throw new TypeError('Object is not a valid DOM element')\n      } else if ('MAP' !== element.tagName.toUpperCase()) {\n        throw new TypeError(\n          'Expected <MAP> tag, found <' + element.tagName + '>.'\n        )\n      }\n    }\n\n    function init(element) {\n      if (element) {\n        chkMap(element)\n        scaleImageMap.call(element)\n        maps.push(element)\n      }\n    }\n\n    var maps\n\n    return function imageMapResizeF(target) {\n      maps = [] // Only return maps from this call\n\n      switch (typeof target) {\n        case 'undefined':\n        case 'string':\n          Array.prototype.forEach.call(\n            document.querySelectorAll(target || 'map'),\n            init\n          )\n          break\n        case 'object':\n          init(target)\n          break\n        default:\n          throw new TypeError('Unexpected data type (' + typeof target + ').')\n      }\n\n      return maps\n    }\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], factory)\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory() //Node for browserfy\n  } else {\n    window.imageMapResize = factory()\n  }\n\n  if ('jQuery' in window) {\n    window.jQuery.fn.imageMapResize = function $imageMapResizeF() {\n      return this.filter('map')\n        .each(scaleImageMap)\n        .end()\n    }\n  }\n})()\n"],
  "mappings": "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",
  "names": ["scaleImageMap", "resizeMap", "scalingFactor", "width", "image", "naturalWidth", "height", "naturalHeight", "padding", "parseInt", "window", "getComputedStyle", "getPropertyValue", "cachedAreaCoordsArray", "forEach", "cachedAreaCoords", "idx", "isWidth", "areas", "coords", "split", "map", "coord", "dimension", "Math", "floor", "Number", "join", "getCoords", "e", "replace", "debounce", "clearTimeout", "timer", "setTimeout", "getImg", "name", "document", "querySelector", "this", "_resize", "getElementsByTagName", "Array", "prototype", "call", "addEventListener", "factory", "init", "element", "tagName", "TypeError", "toUpperCase", "maps", "push", "target", "querySelectorAll", "define", "amd", "module", "exports", "imageMapResize", "jQuery", "fn", "filter", "each", "end"]
}
